




<!DOCTYPE html>
<html class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>html5-boilerplate/modernizr-2.8.0.min.js at master Â· h5bp/html5-boilerplate</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="h5bp/html5-boilerplate" name="twitter:title" /><meta content="html5-boilerplate - A professional front-end template for building fast, robust, and adaptable web apps or sites." name="twitter:description" /><meta content="https://avatars2.githubusercontent.com/u/1136800?v=1&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars2.githubusercontent.com/u/1136800?v=1&amp;s=400" property="og:image" /><meta content="h5bp/html5-boilerplate" property="og:title" /><meta content="https://github.com/h5bp/html5-boilerplate" property="og:url" /><meta content="html5-boilerplate - A professional front-end template for building fast, robust, and adaptable web apps or sites." property="og:description" />

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="4D65AD70:0445:9955565:53DE3FF6" name="octolytics-dimension-request_id" /><meta content="1715622" name="octolytics-actor-id" /><meta content="jpedroribeiro" name="octolytics-actor-login" /><meta content="de37e8062632158369aa6af2200bb443852fc1e1e5d4b3947e4d4de8c77e3861" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="vcIRNRBRxjunRpDLNE5CB0psv3GGS+LEjwEa+xKUGvfIclUOZKQhsYOYm3YzoATNvPtgveUwR6T42/FvqsnW6w==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-8488336393a59083828e685a8702f8734352719a.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-6f603f8712a3ad84b467294bd7ff80bafef0dfa6.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="b97903e118817dc3b1b23f8b995593f2">

      
  <meta name="description" content="html5-boilerplate - A professional front-end template for building fast, robust, and adaptable web apps or sites.">


  <meta content="1136800" name="octolytics-dimension-user_id" /><meta content="h5bp" name="octolytics-dimension-user_login" /><meta content="486550" name="octolytics-dimension-repository_id" /><meta content="h5bp/html5-boilerplate" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="486550" name="octolytics-dimension-repository_network_root_id" /><meta content="h5bp/html5-boilerplate" name="octolytics-dimension-repository_network_root_nwo" />

  <link href="https://github.com/h5bp/html5-boilerplate/commits/master.atom" rel="alternate" title="Recent Commits to html5-boilerplate:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" aria-label="Homepage">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


    
    <a href="/notifications" aria-label="You have no unread notifications" class="notification-indicator tooltipped tooltipped-s" data-hotkey="g n">
        <span class="mail-status all-read"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="s, /" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="jpedroribeiro"
    data-repo="h5bp/html5-boilerplate"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="h5bp/html5-boilerplate">

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked">
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global">
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    

<ul id="user-links">
  <li>
    <a href="/jpedroribeiro" class="name">
      <img alt="jpedroribeiro" data-user="1715622" height="20" src="https://avatars2.githubusercontent.com/u/1715622?v=1&amp;s=40" width="20" /> jpedroribeiro
    </a>
  </li>

  <li class="new-menu dropdown-toggle js-menu-container">
    <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-arrow"></span>
    </a>

    <div class="new-menu-content js-menu-content">
    </div>
  </li>

  <li>
    <a href="/settings/profile" id="account_settings"
      class="tooltipped tooltipped-s"
      aria-label="Account settings ">
      <span class="octicon octicon-tools"></span>
    </a>
  </li>
  <li>
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="M2ULqCzM+YepBBocXz6ppn7tEHN2rMbb1UQP3ayHT6Y3L4To4VOshk0HoLvygQwsVCa2L7a2pL8FEfBxKvc8Ag==" /></div>
      <button class="sign-out-button tooltipped tooltipped-s" aria-label="Sign out">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="https://porter.github.com/new"><span class="octicon octicon-move-right"></span> Import repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="h5bp/html5-boilerplate">This repository</span>
    </li>
      <li>
        <a href="/h5bp/html5-boilerplate/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="P+vy+SPY2kQFnuf0pJLgc10t2Y6XXhomxQ8d6Ra2H+y5u7znc06iL97Zbmc2+KdFmJ0ERneaQKbxMpoxg9aPDg==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="486550" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/h5bp/html5-boilerplate/watchers">
        2,377
      </a>
      <a href="/h5bp/html5-boilerplate/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    

  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/h5bp/html5-boilerplate/unstar" class="js-toggler-form starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="HJ6rGB0upTL5dZjJ8ubC+9Uox+PiONlYTI+S2LwMyYaP+nt/5b5WmYMVXONDN3IUKAwy+sZFhsGJo8CbO7miqg==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar h5bp/html5-boilerplate">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/h5bp/html5-boilerplate/stargazers">
          26,218
        </a>
</form>
    <form accept-charset="UTF-8" action="/h5bp/html5-boilerplate/star" class="js-toggler-form unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="5oTB/xCROLtFcei+RGUxHgoPsV4G6deEaW72xqdLigPzN9tnr9iEE+Rbz1gY5XuFZ3LFCgMbVZKctJ7Rhzti6w==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star h5bp/html5-boilerplate">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/h5bp/html5-boilerplate/stargazers">
          26,218
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/h5bp/html5-boilerplate/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of h5bp/html5-boilerplate to your account" aria-label="Fork your own copy of h5bp/html5-boilerplate to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/h5bp/html5-boilerplate/network" class="social-count">6,903</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/h5bp" class="url fn" itemprop="url" rel="author"><span itemprop="title">h5bp</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/h5bp/html5-boilerplate" class="js-current-repository js-repo-home-link">html5-boilerplate</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders" data-issue-count-url="/h5bp/html5-boilerplate/issues/counts">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/h5bp/html5-boilerplate" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /h5bp/html5-boilerplate">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/h5bp/html5-boilerplate/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /h5bp/html5-boilerplate/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/h5bp/html5-boilerplate/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /h5bp/html5-boilerplate/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/h5bp/html5-boilerplate/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g w" data-selected-links="repo_wiki /h5bp/html5-boilerplate/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/h5bp/html5-boilerplate/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /h5bp/html5-boilerplate/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/h5bp/html5-boilerplate/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /h5bp/html5-boilerplate/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/h5bp/html5-boilerplate.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/h5bp/html5-boilerplate.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="git@github.com:h5bp/html5-boilerplate.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:h5bp/html5-boilerplate.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/h5bp/html5-boilerplate" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/h5bp/html5-boilerplate" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/h5bp/html5-boilerplate" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save h5bp/html5-boilerplate to your computer and use it in GitHub Desktop." aria-label="Save h5bp/html5-boilerplate to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/h5bp/html5-boilerplate/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download h5bp/html5-boilerplate as a zip file"
                   title="Download h5bp/html5-boilerplate as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<a href="/h5bp/html5-boilerplate/blob/da7bf0d530d20e2abf6e53042221084e949dbf71/js/vendor/modernizr-2.8.0.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:907447f5b17426c8b9b320a414817de3 -->

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/blob/master/js/vendor/modernizr-2.8.0.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/blob/rethink-project-structure/js/vendor/modernizr-2.8.0.min.js"
                 data-name="rethink-project-structure"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="rethink-project-structure">rethink-project-structure</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/blob/v4/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4">v4</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v4.3.0/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v4.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.3.0">v4.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v4.2.0/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v4.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.2.0">v4.2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v4.1.0/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v4.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.1.0">v4.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v4.0.3/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v4.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.0.3">v4.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v4.0.2/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v4.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.0.2">v4.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v4.0.1/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v4.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.0.1">v4.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v4.0.0/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v4.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v4.0.0">v4.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v3.0stripped/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v3.0stripped"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0stripped">v3.0stripped</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v3.0.2stripped/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v3.0.2stripped"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.2stripped">v3.0.2stripped</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v3.0.2/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v3.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.2">v3.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v3.0.1stripped/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v3.0.1stripped"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.1stripped">v3.0.1stripped</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v3.0.1/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v3.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0.1">v3.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v3.0/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v3.0">v3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v2.0stripped/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v2.0stripped"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0stripped">v2.0stripped</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v2.0/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v2.0">v2.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v1.0stripped/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v1.0stripped"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0stripped">v1.0stripped</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v1.0rcstripped/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v1.0rcstripped"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0rcstripped">v1.0rcstripped</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v1.0rc/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v1.0rc"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0rc">v1.0rc</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v1.0/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v1.0">v1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v0.9.5stripped/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v0.9.5stripped"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.9.5stripped">v0.9.5stripped</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v0.9.5/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v0.9.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.9.5">v0.9.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v0.9.1stripped/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v0.9.1stripped"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.9.1stripped">v0.9.1stripped</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v0.9.1/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v0.9.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.9.1">v0.9.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/h5bp/html5-boilerplate/tree/v0.9/js/vendor/modernizr-2.8.0.min.js"
                 data-name="v0.9"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.9">v0.9</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/h5bp/html5-boilerplate/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="js/vendor/modernizr-2.8.0.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/h5bp/html5-boilerplate" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">html5-boilerplate</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/h5bp/html5-boilerplate/tree/master/js" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/h5bp/html5-boilerplate/tree/master/js/vendor" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">vendor</span></a></span><span class="separator"> / </span><strong class="final-path">modernizr-2.8.0.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
      <img alt="Hans Christian Reinl" class="main-avatar js-avatar" data-user="502487" height="24" src="https://avatars0.githubusercontent.com/u/502487?s=140" width="24" />
      <span class="author"><a href="/drublic" rel="contributor">drublic</a></span>
      <time datetime="2014-04-29T23:23:01+02:00" is="relative-time">April 29, 2014</time>
      <div class="commit-title">
          <a href="/h5bp/html5-boilerplate/commit/41b9f1a36a746bccb996615cca2dc431bc637a77" class="message" data-pjax="true" title="Update to Modernizr v2.8.0">Update to Modernizr v2.8.0</a>
      </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong>  contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Hans Christian Reinl" class=" js-avatar" data-user="502487" height="24" src="https://avatars0.githubusercontent.com/u/502487?s=140" width="24" />
            <a href="/drublic">drublic</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>5 lines (4 sloc)</span>
          <span class="meta-divider"></span>
        <span>15.514 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/h5bp/html5-boilerplate/raw/master/js/vendor/modernizr-2.8.0.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/h5bp/html5-boilerplate/blame/master/js/vendor/modernizr-2.8.0.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/h5bp/html5-boilerplate/commits/master/js/vendor/modernizr-2.8.0.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw js-conduit-openfile-check"
             href="http://mac.github.com"
             data-url="github-mac://openRepo/https://github.com/h5bp/html5-boilerplate?branch=master&amp;filepath=js%2Fvendor%2Fmodernizr-2.8.0.min.js"
             aria-label="Open this file in GitHub for Mac"
             data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button tooltipped tooltipped-n js-update-url-with-hash"
                 aria-label="Clicking this button will fork this project so you can edit the file"
                 href="/h5bp/html5-boilerplate/edit/master/js/vendor/modernizr-2.8.0.min.js"
                 data-method="post" rel="nofollow"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger tooltipped tooltipped-s"
               href="/h5bp/html5-boilerplate/delete/master/js/vendor/modernizr-2.8.0.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
      
  <div class="blob-wrapper data type-javascript">
       <table class="file-code file-diff tab-size-8">
         <tr class="file-code-line">
           <td class="blob-line-nums">
             <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>

           </td>
           <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/* Modernizr 2.8.0 (Custom Build) | MIT &amp; BSD</span></div><div class='line' id='LC2'><span class="cm"> * Build: http://modernizr.com/download/#-fontface-backgroundsize-borderimage-borderradius-boxshadow-flexbox-hsla-multiplebgs-opacity-rgba-textshadow-cssanimations-csscolumns-generatedcontent-cssgradients-cssreflections-csstransforms-csstransforms3d-csstransitions-applicationcache-canvas-canvastext-draganddrop-hashchange-history-audio-video-indexeddb-input-inputtypes-localstorage-postmessage-sessionstorage-websockets-websqldatabase-webworkers-geolocation-inlinesvg-smil-svg-svgclippaths-touch-webgl-shiv-mq-cssclasses-addtest-prefixed-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes-load</span></div><div class='line' id='LC3'><span class="cm"> */</span></div><div class='line' id='LC4'><span class="p">;</span><span class="nb">window</span><span class="p">.</span><span class="nx">Modernizr</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">j</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="o">!!~</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">!==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;pfx&quot;</span><span class="o">?</span><span class="nx">e</span><span class="o">:!</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">!==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="o">===!</span><span class="mi">1</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:</span><span class="nx">F</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">d</span><span class="o">||</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">input</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">u</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="k">in</span> <span class="nx">k</span><span class="p">;</span><span class="k">return</span> <span class="nx">u</span><span class="p">.</span><span class="nx">list</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">list</span><span class="o">=!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;datalist&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">HTMLDataListElement</span><span class="p">),</span><span class="nx">u</span><span class="p">}(</span><span class="s2">&quot;autocomplete autofocus list placeholder max min multiple pattern required step&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">inputtypes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]),</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">type</span><span class="o">!==</span><span class="s2">&quot;text&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;position:absolute;visibility:hidden;&quot;</span><span class="p">,</span><span class="sr">/^range$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">WebkitAppearance</span><span class="o">!==</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">WebkitAppearance</span><span class="o">!==</span><span class="s2">&quot;textfield&quot;</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">!==</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">k</span><span class="p">))</span><span class="o">:</span><span class="sr">/^(search|tel)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="sr">/^(url|email)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">checkValidity</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">checkValidity</span><span class="p">()</span><span class="o">===!</span><span class="mi">1</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">value</span><span class="o">!=</span><span class="nx">l</span><span class="p">)),</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=!!</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="p">}(</span><span class="s2">&quot;search tel url email datetime date month week time datetime-local number range color&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot;2.8.0&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;modernizr&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;:)&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">{}.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot; -webkit- -moz- -o- -ms- &quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="s2">&quot;Webkit Moz O ms&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">svg</span><span class="o">:</span><span class="s2">&quot;http://www.w3.org/2000/svg&quot;</span><span class="p">},</span><span class="nx">s</span><span class="o">=</span><span class="p">{},</span><span class="nx">t</span><span class="o">=</span><span class="p">{},</span><span class="nx">u</span><span class="o">=</span><span class="p">{},</span><span class="nx">v</span><span class="o">=</span><span class="p">[],</span><span class="nx">w</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span><span class="k">while</span><span class="p">(</span><span class="nx">d</span><span class="o">--</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:</span><span class="nx">h</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;&amp;#173;&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;style id=&quot;s&#39;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&lt;/style&gt;&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">h</span><span class="p">,(</span><span class="nx">m</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">n</span><span class="p">).</span><span class="nx">innerHTML</span><span class="o">+=</span><span class="nx">f</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">m</span><span class="o">||</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">background</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">n</span><span class="p">)),</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">m</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="nx">k</span><span class="p">),</span><span class="o">!!</span><span class="nx">i</span><span class="p">},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">matchMedia</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">msMatchMedia</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">matches</span><span class="o">||!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">y</span><span class="p">(</span><span class="s2">&quot;@media &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; { #&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot; { position: absolute; } }&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">?</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">)[</span><span class="s2">&quot;position&quot;</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;absolute&quot;</span><span class="p">}),</span><span class="nx">d</span><span class="p">},</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="s2">&quot;function&quot;</span><span class="p">),</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">d</span><span class="p">))),</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="p">}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">select</span><span class="o">:</span><span class="s2">&quot;input&quot;</span><span class="p">,</span><span class="nx">change</span><span class="o">:</span><span class="s2">&quot;input&quot;</span><span class="p">,</span><span class="nx">submit</span><span class="o">:</span><span class="s2">&quot;form&quot;</span><span class="p">,</span><span class="nx">reset</span><span class="o">:</span><span class="s2">&quot;form&quot;</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="s2">&quot;img&quot;</span><span class="p">,</span><span class="nx">load</span><span class="o">:</span><span class="s2">&quot;img&quot;</span><span class="p">,</span><span class="nx">abort</span><span class="o">:</span><span class="s2">&quot;img&quot;</span><span class="p">};</span><span class="k">return</span> <span class="nx">d</span><span class="p">}(),</span><span class="nx">B</span><span class="o">=</span><span class="p">{}.</span><span class="nx">hasOwnProperty</span><span class="p">,</span><span class="nx">C</span><span class="p">;</span><span class="o">!</span><span class="nx">F</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">F</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">call</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">B</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;undefined&quot;</span><span class="p">)},</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">||</span><span class="p">(</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)));</span><span class="k">return</span> <span class="nb">Object</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)))};</span><span class="k">return</span> <span class="nx">e</span><span class="p">}),</span><span class="nx">s</span><span class="p">.</span><span class="nx">flexbox</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;flexWrap&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContext</span><span class="o">&amp;&amp;!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">canvastext</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">e</span><span class="p">.</span><span class="nx">canvas</span><span class="o">&amp;&amp;!!</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">).</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">).</span><span class="nx">fillText</span><span class="p">,</span><span class="s2">&quot;function&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">webgl</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">WebGLRenderingContext</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">touch</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;ontouchstart&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">DocumentTouch</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">DocumentTouch</span><span class="o">?</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="nx">y</span><span class="p">([</span><span class="s2">&quot;@media (&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;touch-enabled),(&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="s2">&quot;{#modernizr{top:9px;position:absolute}}&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">===</span><span class="mi">9</span><span class="p">}),</span><span class="nx">c</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">geolocation</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;geolocation&quot;</span><span class="k">in</span> <span class="nx">navigator</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">postmessage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">postMessage</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">websqldatabase</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">openDatabase</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">indexedDB</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;indexedDB&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">hashchange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">A</span><span class="p">(</span><span class="s2">&quot;hashchange&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentMode</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentMode</span><span class="o">&gt;</span><span class="mi">7</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">history</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">history</span><span class="o">&amp;&amp;!!</span><span class="nx">history</span><span class="p">.</span><span class="nx">pushState</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">draganddrop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;draggable&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">||</span><span class="s2">&quot;ondragstart&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;ondrop&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">websockets</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;WebSocket&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">||</span><span class="s2">&quot;MozWebSocket&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">rgba</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="s2">&quot;background-color:rgba(150,255,150,.5)&quot;</span><span class="p">),</span><span class="nx">G</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="s2">&quot;rgba&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">hsla</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="s2">&quot;background-color:hsla(120,40%,100%,.5)&quot;</span><span class="p">),</span><span class="nx">G</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="s2">&quot;rgba&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">G</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="s2">&quot;hsla&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">multiplebgs</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="s2">&quot;background:url(https://),url(https://),red url(https://)&quot;</span><span class="p">),</span><span class="sr">/(url\s*\(.*?){3}/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">background</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">backgroundsize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;backgroundSize&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">borderimage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;borderImage&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">borderradius</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;borderRadius&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">boxshadow</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;boxShadow&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">textshadow</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">textShadow</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">E</span><span class="p">(</span><span class="s2">&quot;opacity:.55&quot;</span><span class="p">),</span><span class="sr">/^0.55$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">opacity</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">cssanimations</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;animationName&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">csscolumns</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;columnCount&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">cssgradients</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;background-image:&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;gradient(linear,left top,right bottom,from(#9f9),to(white));&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;linear-gradient(left top,#9f9, white);&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">D</span><span class="p">((</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-webkit- &quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">a</span><span class="p">)).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)),</span><span class="nx">G</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">backgroundImage</span><span class="p">,</span><span class="s2">&quot;gradient&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">cssreflections</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;boxReflect&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">csstransforms</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">csstransforms3d</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=!!</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;perspective&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;webkitPerspective&quot;</span><span class="k">in</span> <span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">(</span><span class="s2">&quot;@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="o">===</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">===</span><span class="mi">3</span><span class="p">}),</span><span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">csstransitions</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;transition&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">fontface</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">y</span><span class="p">(</span><span class="s1">&#39;@font-face {font-family:&quot;font&quot;;src:url(&quot;https://&quot;)}&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;smodernizr&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">sheet</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssRules</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssRules</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssRules</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">cssText</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssText</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="sr">/src/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span><span class="o">===</span><span class="mi">0</span><span class="p">}),</span><span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">generatedcontent</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">y</span><span class="p">([</span><span class="s2">&quot;#&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;{font:0/0 a}#&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="s1">&#39;:after{content:&quot;&#39;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="s1">&#39;&quot;;visibility:hidden;font:3px/1 a}&#39;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">&gt;=</span><span class="mi">3</span><span class="p">}),</span><span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">video</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;video&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nb">Boolean</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">ogg</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;video/ogg; codecs=&quot;theora&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">h264</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;video/mp4; codecs=&quot;avc1.42E01E&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">webm</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;video/webm; codecs=&quot;vp8, vorbis&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">audio</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;audio&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nb">Boolean</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">ogg</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;audio/ogg; codecs=&quot;vorbis&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">mp3</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/mpeg;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">wav</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;audio/wav; codecs=&quot;1&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">m4a</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/x-m4a;&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/aac;&quot;</span><span class="p">)).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">localstorage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">sessionstorage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">webworkers</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">Worker</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">applicationcache</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">applicationCache</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">svg</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">&amp;&amp;!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">svg</span><span class="p">,</span><span class="s2">&quot;svg&quot;</span><span class="p">).</span><span class="nx">createSVGRect</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">inlinesvg</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;svg/&gt;&quot;</span><span class="p">,(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">namespaceURI</span><span class="p">)</span><span class="o">==</span><span class="nx">r</span><span class="p">.</span><span class="nx">svg</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">smil</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">&amp;&amp;</span><span class="sr">/SVGAnimate/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">svg</span><span class="p">,</span><span class="s2">&quot;animate&quot;</span><span class="p">)))},</span><span class="nx">s</span><span class="p">.</span><span class="nx">svgclippaths</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">&amp;&amp;</span><span class="sr">/SVGClipPath/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">svg</span><span class="p">,</span><span class="s2">&quot;clipPath&quot;</span><span class="p">)))};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">L</span> <span class="k">in</span> <span class="nx">s</span><span class="p">)</span><span class="nx">C</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">L</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">e</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">L</span><span class="p">](),</span><span class="nx">v</span><span class="p">.</span><span class="nx">push</span><span class="p">((</span><span class="nx">e</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;no-&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">x</span><span class="p">));</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">input</span><span class="o">||</span><span class="nx">K</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">addTest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">addTest</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">!==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">?</span><span class="nx">b</span><span class="p">()</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;no-&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">D</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;p&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;x&lt;style&gt;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&lt;/style&gt;&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">elements</span><span class="p">;</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">]];</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">i</span><span class="o">++</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="kd">var</span> <span class="nx">g</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">cloneNode</span><span class="p">()</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElem</span><span class="p">(</span><span class="nx">a</span><span class="p">)).</span><span class="nx">cloneNode</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElem</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">canHaveChildren</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">tagUrn</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">frag</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">frag</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElem</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">createFrag</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">frag</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createFrag</span><span class="p">()),</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">shivMethods</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElem</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="o">=</span><span class="nb">Function</span><span class="p">(</span><span class="s2">&quot;h,f&quot;</span><span class="p">,</span><span class="s2">&quot;return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&amp;&amp;(&quot;</span><span class="o">+</span><span class="nx">m</span><span class="p">().</span><span class="nx">join</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\w\-]+/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">createElem</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">frag</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s1">&#39;c(&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;)&#39;</span><span class="p">})</span><span class="o">+</span><span class="s2">&quot;);return n}&quot;</span><span class="p">)(</span><span class="nx">s</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">frag</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">shivCSS</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasCSS</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasCSS</span><span class="o">=!!</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}&quot;</span><span class="p">)),</span><span class="nx">k</span><span class="o">||</span><span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;3.7.0&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">html5</span><span class="o">||</span><span class="p">{},</span><span class="nx">e</span><span class="o">=</span><span class="sr">/^&lt;|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;_html5shiv&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="p">{},</span><span class="nx">k</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;xyz&gt;&lt;/xyz&gt;&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">();</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">}()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">}})();</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">elements</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">elements</span><span class="o">||</span><span class="s2">&quot;abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video&quot;</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">shivCSS</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">shivCSS</span><span class="o">!==!</span><span class="mi">1</span><span class="p">,</span><span class="nx">supportsUnknownElements</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">shivMethods</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">shivMethods</span><span class="o">!==!</span><span class="mi">1</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;default&quot;</span><span class="p">,</span><span class="nx">shivDocument</span><span class="o">:</span><span class="nx">r</span><span class="p">,</span><span class="nx">createElement</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">createDocumentFragment</span><span class="o">:</span><span class="nx">p</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">html5</span><span class="o">=</span><span class="nx">s</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)}(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">_version</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_prefixes</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_domPrefixes</span><span class="o">=</span><span class="nx">q</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_cssomPrefixes</span><span class="o">=</span><span class="nx">p</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">mq</span><span class="o">=</span><span class="nx">z</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">hasEvent</span><span class="o">=</span><span class="nx">A</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">testProp</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">H</span><span class="p">([</span><span class="nx">a</span><span class="p">])},</span><span class="nx">e</span><span class="p">.</span><span class="nx">testAllProps</span><span class="o">=</span><span class="nx">J</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">testStyles</span><span class="o">=</span><span class="nx">y</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">prefixed</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;pfx&quot;</span><span class="p">)},</span><span class="nx">g</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(^|\s)no-js(\s|$)/</span><span class="p">,</span><span class="s2">&quot;$1$2&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot; js &quot;</span><span class="o">+</span><span class="nx">v</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">}(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;[object Function]&quot;</span><span class="o">==</span><span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;loaded&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;complete&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;uninitialized&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">q</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="o">?</span><span class="nx">m</span><span class="p">(</span><span class="kd">function</span><span class="p">(){(</span><span class="s2">&quot;c&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="o">?</span><span class="nx">B</span><span class="p">.</span><span class="nx">injectCss</span><span class="o">:</span><span class="nx">B</span><span class="p">.</span><span class="nx">injectJs</span><span class="p">)(</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">(),</span><span class="nx">h</span><span class="p">())</span><span class="o">:</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="nx">o</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">)){</span><span class="s2">&quot;img&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">l</span><span class="p">)},</span><span class="mi">50</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">d</span><span class="p">].</span><span class="nx">onload</span><span class="p">()}}</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">||</span><span class="nx">B</span><span class="p">.</span><span class="nx">errorTimeout</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="p">{</span><span class="nx">t</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">s</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">j</span><span class="p">};</span><span class="mi">1</span><span class="o">===</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">c</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">)},</span><span class="nx">p</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="s2">&quot;img&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">||</span><span class="mi">2</span><span class="o">===</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">s</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">n</span><span class="p">),</span><span class="nx">m</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="p">))</span><span class="o">:</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;j&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">i</span><span class="p">(</span><span class="s2">&quot;c&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">v</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">++</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">++</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="mi">1</span><span class="o">==</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">()),</span><span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">loader</span><span class="o">=</span><span class="p">{</span><span class="nx">load</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="p">{}.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;MozAppearance&quot;</span><span class="k">in</span> <span class="nx">l</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="o">&amp;&amp;!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">compareNode</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">opera</span><span class="o">&amp;&amp;</span><span class="s2">&quot;[object Opera]&quot;</span><span class="o">==</span><span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">opera</span><span class="p">),</span><span class="nx">l</span><span class="o">=!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">r</span><span class="o">?</span><span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;script&quot;</span><span class="o">:</span><span class="s2">&quot;img&quot;</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;script&quot;</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;[object Array]&quot;</span><span class="o">==</span><span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">x</span><span class="o">=</span><span class="p">[],</span><span class="nx">y</span><span class="o">=</span><span class="p">{},</span><span class="nx">z</span><span class="o">=</span><span class="p">{</span><span class="nx">timeout</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">timeout</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">a</span><span class="p">}},</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;!&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">url</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">origUrl</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">prefixes</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="p">),(</span><span class="nx">e</span><span class="o">=</span><span class="nx">z</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">shift</span><span class="p">()])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">[</span><span class="nx">f</span><span class="p">](</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">autoCallback</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">).</span><span class="nx">pop</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">).</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">i</span><span class="p">.</span><span class="nx">bypass</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">).</span><span class="nx">pop</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]]),</span><span class="nx">i</span><span class="p">.</span><span class="nx">instead</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">instead</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">noexec</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="nx">y</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">forceCSS</span><span class="o">||!</span><span class="nx">i</span><span class="p">.</span><span class="nx">forceJS</span><span class="o">&amp;&amp;</span><span class="s2">&quot;css&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">).</span><span class="nx">pop</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">).</span><span class="nx">shift</span><span class="p">()</span><span class="o">?</span><span class="s2">&quot;c&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">noexec</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">attrs</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">timeout</span><span class="p">),(</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="p">(),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">origUrl</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">origUrl</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">y</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">})))}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">()}),</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span> <span class="k">in</span> <span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}(),</span><span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="o">&amp;&amp;!--</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">?</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">()}</span><span class="o">:</span><span class="nx">j</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">l</span><span class="p">()}}(</span><span class="nx">k</span><span class="p">[</span><span class="nx">n</span><span class="p">])),</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">h</span><span class="p">))}</span><span class="k">else</span><span class="o">!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">test</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">load</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">both</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">callback</span><span class="o">||</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">complete</span><span class="o">||</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">yep</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">nope</span><span class="p">,</span><span class="o">!!</span><span class="nx">i</span><span class="p">),</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">i</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">loader</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">e</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">?</span><span class="nx">B</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nb">Object</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">===</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="k">else</span> <span class="nb">Object</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">)},</span><span class="nx">B</span><span class="p">.</span><span class="nx">addPrefix</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">z</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">B</span><span class="p">.</span><span class="nx">addFilter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">B</span><span class="p">.</span><span class="nx">errorTimeout</span><span class="o">=</span><span class="mi">1</span><span class="nx">e4</span><span class="p">,</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="s2">&quot;loading&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="s2">&quot;complete&quot;</span><span class="p">},</span><span class="mi">0</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">yepnope</span><span class="o">=</span><span class="nx">k</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">executeStack</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">injectJs</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">),</span><span class="nx">l</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nx">B</span><span class="p">.</span><span class="nx">errorTimeout</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">o</span><span class="p">]);</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="o">!</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">(),</span><span class="nx">k</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="nx">m</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="mi">1</span><span class="p">))},</span><span class="nx">e</span><span class="p">),</span><span class="nx">i</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">onload</span><span class="p">()</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">n</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">injectCss</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;link&quot;</span><span class="p">),</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">m</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">))}}(</span><span class="k">this</span><span class="p">,</span><span class="nb">document</span><span class="p">),</span><span class="nx">Modernizr</span><span class="p">.</span><span class="nx">load</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">window</span><span class="p">,[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">))};</span></div></pre></div></td>
         </tr>
       </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.04748s from github-fe131-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-8c6e10f6700610e693b29e274318b3714523ca3e.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-8cb2cf90ade4ed9e5f018ba0309e9b3d0bf0c6db.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

